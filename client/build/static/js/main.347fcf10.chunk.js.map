{"version":3,"sources":["img/book-shop.png","img/border.png","img/book.png","components/input/input.js","redux/actions/auth.js","redux/action-types.js","redux/actions/books.js","redux/actions/orders.js","redux/actions/download.js","service/toastMessage.js","page/createBookPage.js","components/shoppingCartTable/shoppingCartTable.js","page/cartPage.js","page/titlePage.js","page/authPage.js","components/bookList/bookItem/bookItem.js","components/bookList/bookList.js","page/booksPage.js","components/orderList/orderItem/orderItem.js","components/orderList/orderList.js","page/ordersPage.js","components/shopHeader/shopHeader.js","components/navbar/navbar.js","App.js","route/route.js","redux/reducers/updateAuthData.js","redux/reducers/updateDownload.js","redux/reducers/updateBooks.js","redux/reducers/updateShoppingCart.js","redux/reducers/updateOrders.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Input","props","onChange","fieldValue","type","value","labelCaption","placeholder","className","id","name","htmlFor","fetchLoginData","data","token","userId","localStorage","setItem","JSON","stringify","payload","fetchRegisterData","logout","removeItem","fetchBookCreated","fetchBooks","addedBooksToCart","_id","count","cartReset","onDelete","fetchOrders","fetchFailure","errorMessage","fetchData","url","body","method","headers","dispatch","a","storageData","_getStorageData","fetch","response","json","statusCode","status","message","hideMessage","cart","forEach","item","bookId","getItem","parse","toastMessage","text","window","M","toast","html","connect","state","booksData","title","author","price","coverImage","responseMessage","download","isLoading","isError","updTitle","e","target","updAuthor","updPrice","updCoverImage","useEffect","updateTextFields","onCreateBook","style","marginRight","disabled","onClick","ShoppingCartTable","onWriteToCart","itemsCart","writeToCartArray","map","onCreateOrder","totalPrice","books","total","this","prevProps","items","onIncrease","onDecrease","idx","key","length","React","Component","shoppingCart","cartItems","orderTotal","CartPage","src","bookShop_icon","alt","authData","email","password","updEmail","updPassword","onLogin","onRegister","border_icon","BookItem","book","onAddedToCart","href","BookList","bookList","addedToCart","BooksPage","OrderItem","order","onDeleteOrderItem","date","Date","toLocaleDateString","time","toLocaleTimeString","index","console","log","orders","ordersData","orderItemId","orderList","reverse","emptyList","OrdersPage","numItems","useState","cartList","setCartList","cartListItem","cartItem","to","history","useHistory","onLogout","preventDefault","push","book_icon","setToken","routes","path","exact","updateAuthData","action","undefined","updateDownload","updateBooks","findBookInBooks","find","updBookInCart","addBookCount","updItemInCart","candidateIndex","findIndex","deleteBookFromCart","slice","delBook","updCartItems","filter","updateShoppingCart","updateOrders","reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.347fcf10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book-shop.a5f0bf8f.png\";","module.exports = __webpack_public_path__ + \"static/media/border.16a5fbb5.png\";","module.exports = __webpack_public_path__ + \"static/media/book.fcf28b87.png\";","import React from 'react'\r\n\r\nconst Input = (props) => {\r\n    const { onChange, fieldValue, type, value, labelCaption } = props\r\n    const placeholder = `input ${fieldValue}`\r\n    return (\r\n        <div className=\"input-field\">\r\n            <input\r\n                placeholder= {placeholder}\r\n                id={fieldValue}\r\n                type={type}\r\n                name={fieldValue}\r\n                onChange={onChange}\r\n                value={value}\r\n            />\r\n            <label htmlFor={fieldValue}>{labelCaption}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import {\r\n    EMAIL_UPDATE,\r\n    PASSWORD_UPDATE,\r\n    FETCH_LOGIN_DATA,\r\n    FETCH_REGISTER_DATA,\r\n    SET_TOKEN,\r\n    LOGOUT} from '../action-types'\r\n\r\nconst fetchLoginData = (data) => {\r\n    const {token, userId} =  data\r\n    if(token){\r\n        localStorage.setItem(\"user_data\", JSON.stringify({\r\n            token,\r\n            userId\r\n        }))\r\n    } \r\n    return {\r\n        type: FETCH_LOGIN_DATA,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchRegisterData = (data) => {\r\n    return {\r\n        type: FETCH_REGISTER_DATA,\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst updEmail = (email) => {\r\n    return {\r\n        type: EMAIL_UPDATE,\r\n        payload: email\r\n    }\r\n}\r\n\r\nconst updPassword = (password) => {\r\n    return {\r\n        type: PASSWORD_UPDATE,\r\n        payload: password\r\n    }\r\n}\r\n\r\nconst setToken = (token) => {\r\n    return {\r\n        type: SET_TOKEN,\r\n        payload: token\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem(\"user_data\")\r\n    return {\r\n        type: LOGOUT\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    updEmail, \r\n    updPassword, \r\n    setToken, \r\n    logout, \r\n    fetchLoginData, \r\n    fetchRegisterData \r\n}","const FETCH_REQUEST = \"FETCH_REQUEST\"\r\nconst FETCH_SUCCESS = \"FETCH_SUCCESS\"\r\nconst FETCH_FAILURE = \"FETCH_FAILURE\"\r\n\r\nconst BOOK_DELETED_FROM_CART = \"BOOK_DELETED_FROM_CART\"\r\nconst BOOK_ADDED_TO_CART = \"BOOK_ADDED_TO_CART\"\r\nconst BOOK_DECREASED_FROM_CART = \"BOOK_DECREASED_FROM_CART\"\r\nconst BOOK_ADDED_TO_CART_FROM_SERVER = \"BOOK_ADDED_TO_CART_FROM_SERVER\"\r\nconst CART_RESET = \"CART_RESET\"\r\n\r\nconst EMAIL_UPDATE = \"EMAIL_UPDATE\"\r\nconst PASSWORD_UPDATE = \"PASSWORD_UPDATE\"\r\nconst FETCH_LOGIN_DATA = 'FETCH_LOGIN_DATA'\r\nconst FETCH_REGISTER_DATA = \"FETCH_REGISTER_DATA\"\r\nconst SET_TOKEN = \"SET_TOKEN\"\r\nconst LOGOUT = \"LOGOUT\"\r\n\r\nconst FETCH_BOOK_CREATED = \"FETCH_BOOK_CREATED\"\r\nconst FETCH_BOOKS = \"FETCH_BOOKS\"\r\nconst TITLE_UPDATE = \"TITLE_UPDATE\"\r\nconst AUTHOR_UPDATE = \"AUTHOR_UPDATE\"\r\nconst PRICE_UPDATE = \"PRICE_UPDATE\"\r\nconst COVER_IMAGE_UPDATE = \"COVER_IMAGE_UPDATE\"\r\n\r\nconst FETCH_ORDERS = \"FETCH_ORDERS\"\r\n\r\n\r\nexport {\r\n    FETCH_REQUEST,\r\n    FETCH_SUCCESS,\r\n    FETCH_FAILURE,\r\n    \r\n    BOOK_DELETED_FROM_CART,\r\n    BOOK_ADDED_TO_CART,\r\n    BOOK_DECREASED_FROM_CART,\r\n    BOOK_ADDED_TO_CART_FROM_SERVER,\r\n    CART_RESET,\r\n    \r\n    EMAIL_UPDATE,\r\n    PASSWORD_UPDATE,\r\n    FETCH_LOGIN_DATA,\r\n    FETCH_REGISTER_DATA,\r\n    SET_TOKEN,\r\n    LOGOUT,\r\n    \r\n    FETCH_BOOK_CREATED,\r\n    FETCH_BOOKS,  \r\n    TITLE_UPDATE,\r\n    AUTHOR_UPDATE,\r\n    PRICE_UPDATE,\r\n    COVER_IMAGE_UPDATE,\r\n\r\n    FETCH_ORDERS\r\n}","import {\r\n    FETCH_BOOK_CREATED,\r\n    FETCH_BOOKS,\r\n    TITLE_UPDATE,\r\n    AUTHOR_UPDATE,\r\n    PRICE_UPDATE,\r\n    COVER_IMAGE_UPDATE,\r\n    BOOK_ADDED_TO_CART,\r\n    BOOK_DELETED_FROM_CART,\r\n    BOOK_DECREASED_FROM_CART,\r\n    BOOK_ADDED_TO_CART_FROM_SERVER,\r\n    CART_RESET\r\n} from '../action-types'\r\n\r\nconst fetchBookCreated = (data) => {\r\n    return {\r\n        type: FETCH_BOOK_CREATED,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst fetchBooks = (data) => {\r\n    return {\r\n        type: FETCH_BOOKS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst updTitle = (title) => {\r\n    return {\r\n        type: TITLE_UPDATE,\r\n        payload: title\r\n    }\r\n}\r\n\r\n\r\nconst updAuthor = (author) => {\r\n    return {\r\n        type: AUTHOR_UPDATE,\r\n        payload: author\r\n    }\r\n}\r\n\r\nconst updPrice = (price) => {\r\n    return {\r\n        type: PRICE_UPDATE,\r\n        payload: price\r\n    }\r\n}\r\n\r\nconst updCoverImage =(coverImage) => {\r\n    return {\r\n        type: COVER_IMAGE_UPDATE,\r\n        payload: coverImage\r\n    }\r\n}\r\n\r\nconst addedToCart = (_id) => {    \r\n    return {\r\n        type: BOOK_ADDED_TO_CART,\r\n        payload: _id\r\n    }\r\n}\r\n\r\n\r\nconst addedBooksToCart = (_id, count) => { \r\n    return {\r\n        type: BOOK_ADDED_TO_CART_FROM_SERVER,\r\n        payload: {_id, count}\r\n    }\r\n}\r\n\r\nconst cartReset = () => {\r\n    return { \r\n        type: CART_RESET\r\n    }\r\n}\r\n\r\nconst onDelete = (id) => {\r\n    return {\r\n        type: BOOK_DELETED_FROM_CART,\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst onIncrease = (id) => {\r\n    return {\r\n        type: BOOK_ADDED_TO_CART,\r\n        payload: id\r\n    }\r\n}\r\n\r\nconst onDecrease = (id) => {\r\n    return {\r\n        type: BOOK_DECREASED_FROM_CART,\r\n        payload: id\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchBookCreated,\r\n    fetchBooks,\r\n    updTitle,\r\n    updAuthor,\r\n    updPrice,\r\n    updCoverImage,\r\n    addedToCart, \r\n    onDelete,\r\n    onIncrease,\r\n    onDecrease,\r\n    addedBooksToCart,\r\n    cartReset\r\n}","import {\r\n    FETCH_ORDERS\r\n} from '../action-types'\r\n\r\nconst fetchOrders = (data) => {\r\n    return {\r\n        type: FETCH_ORDERS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchOrders\r\n}","import{ \r\n    FETCH_FAILURE,\r\n    FETCH_SUCCESS,\r\n    FETCH_REQUEST\r\n    } from '../action-types'\r\n\r\nimport {\r\n    fetchLoginData, \r\n    fetchRegisterData,    \r\n    logout\r\n    } from './auth'\r\n\r\nimport {\r\n    fetchBookCreated,\r\n    fetchBooks,\r\n    addedBooksToCart,\r\n    cartReset,\r\n    onDelete\r\n    } from './books'\r\n\r\nimport {\r\n    fetchOrders\r\n    } from './orders'\r\n\r\n\r\nconst fetchRequest = () => {\r\n    return {\r\n        type: FETCH_REQUEST\r\n    }\r\n}\r\nconst fetchSuccess = () => {\r\n    return {\r\n        type: FETCH_SUCCESS \r\n    }\r\n}\r\nconst fetchFailure = (errorMessage) => {\r\n    return {\r\n        type: FETCH_FAILURE,\r\n        payload: errorMessage\r\n    }\r\n}\r\n\r\nconst fetchData = (url, body = null, method = \"GET\", headers = {}) => {\r\n\r\n    return async(dispatch) => {        \r\n        const storageData = _getStorageData()\r\n        if(storageData){\r\n            const { token } = storageData\r\n            headers[\"authorization\"] = `Bearer ${token}` \r\n        }\r\n\r\n        if(body) {\r\n            body = JSON.stringify(body)\r\n            headers[\"Content-Type\"] = \"application/json\"\r\n        }\r\n\r\n        if (body && method !== \"DELETE\") {\r\n            method = \"POST\"\r\n        }\r\n\r\n        dispatch(fetchRequest())\r\n        const response = await fetch(url, { method, body, headers  })\r\n        const data = await response.json()\r\n        const statusCode = response.status\r\n        const {message, hideMessage} = data\r\n        \r\n        \r\n        if(statusCode === 401 && message === \"Token is not valid!\" ) {\r\n            dispatch(logout())\r\n        }\r\n\r\n        if(     statusCode === 400\r\n            ||  statusCode === 401){\r\n            return (dispatch(fetchFailure(message)))\r\n        } else {\r\n            dispatch(fetchSuccess())\r\n            if(statusCode === 200 && hideMessage === \"You entered!\") {\r\n               return dispatch(fetchLoginData(data))\r\n            }\r\n            \r\n            if(statusCode === 201 && message === \"User created. Verify user on your email\") {\r\n                return dispatch(fetchRegisterData(data))\r\n            }\r\n\r\n            if(statusCode === 201 && hideMessage === \"book created\") { \r\n                return dispatch(fetchBookCreated(data))\r\n            }\r\n\r\n            if(statusCode === 200 && message === \"books\") {\r\n                return dispatch(fetchBooks(data))\r\n            }\r\n\r\n            if(statusCode === 201 && message === \"Order added\") {\r\n                return dispatch(cartReset())\r\n            }\r\n\r\n            if(statusCode === 200 && message === \"user's orders\") {\r\n                return dispatch(fetchOrders(data))\r\n            }\r\n\r\n            if(statusCode === 201 && message === \"write to cart\") {\r\n                \r\n            }\r\n\r\n            if(statusCode === 200 && message === \"cart\") {\r\n                const { cart } = data\r\n                cart.forEach( item => {\r\n                    const {count, bookId} = item\r\n                    dispatch(onDelete(bookId))\r\n                    return dispatch(addedBooksToCart(bookId, count))\r\n                })\r\n   \r\n            }\r\n\r\n            \r\n        }    \r\n    }\r\n}\r\n\r\nfunction _getStorageData() {\r\n    const data = localStorage.getItem(\"user_data\")\r\n    return JSON.parse(data)\r\n}\r\n\r\n\r\nexport {\r\n    fetchRequest, \r\n    fetchSuccess, \r\n    fetchFailure,\r\n    fetchData\r\n}","// import { useCallback } from \"react\"\r\nexport const toastMessage = (text) => {\r\n    if(window.M && text) {\r\n       window.M.toast({html: text})\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Input from '../components/input/input'\r\nimport {\r\n    fetchData,\r\n    updTitle,\r\n    updAuthor,\r\n    updPrice,\r\n    updCoverImage    \r\n} from '../redux/actions'\r\nimport {toastMessage} from '../service/toastMessage'\r\n\r\n\r\nconst BookCreator = (props) => {\r\n    \r\n    const {\r\n        title,\r\n        author,\r\n        price,\r\n        coverImage,\r\n        isLoading,\r\n        updTitle,\r\n        updPrice,\r\n        updAuthor,\r\n        updCoverImage,\r\n        fetchData,\r\n        isError,\r\n        responseMessage\r\n    } = props \r\n    \r\n    useEffect(() => {\r\n        toastMessage(isError)    \r\n    },[isError])\r\n\r\n    useEffect(()=>{\r\n        toastMessage(responseMessage)\r\n    }, [responseMessage])\r\n\r\n    useEffect(()=>{\r\n        window.M.updateTextFields()\r\n    },[])\r\n\r\n    const onCreateBook = async(title, author, price, coverImage) => {\r\n        fetchData('/create_book', { title, author, price, coverImage })\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h3>Add book to data base</h3>\r\n                <div className=\"card blue-grey darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Create your book</span>\r\n                        <div>\r\n                            <Input\r\n                                fieldValue=\"title\"\r\n                                type=\"text\"\r\n                                value={title}\r\n                                onChange={updTitle}\r\n                                labelCaption=\"Title\" />\r\n                            <Input\r\n                                fieldValue=\"author\"\r\n                                type=\"text\"\r\n                                value={author}\r\n                                onChange={updAuthor}\r\n                                labelCaption=\"Author\" />\r\n                            <Input\r\n                                fieldValue=\"price\"\r\n                                type=\"number\"\r\n                                value={price}\r\n                                onChange={updPrice}\r\n                                labelCaption=\"Price\" />\r\n                            <Input\r\n                                fieldValue=\"coverImage\"\r\n                                type=\"text\"\r\n                                value={coverImage}\r\n                                onChange={updCoverImage}\r\n                                labelCaption=\"Image\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className=\"btn yellow darken-4\"\r\n                            style={{ marginRight: '10px' }}\r\n                            disabled={isLoading}\r\n                            onClick={() => {\r\n                                onCreateBook(title, author, price, coverImage)\r\n                            }}\r\n                        >\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { title, author, price, coverImage, responseMessage } = state.booksData\r\n    const { isLoading, isError } = state.download\r\n    \r\n    return {\r\n        title,\r\n        author,\r\n        price,\r\n        coverImage,\r\n        isLoading,\r\n        isError,\r\n        responseMessage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url, method, body, headers) => \r\n            dispatch(fetchData(url, method, body, headers)),\r\n\r\n        updTitle: (e) => dispatch(updTitle(e.target.value)),\r\n        updAuthor: (e) => dispatch(updAuthor(e.target.value)),\r\n        updPrice: (e) => dispatch(updPrice(e.target.value)),\r\n        updCoverImage: (e) => dispatch(updCoverImage(e.target.value)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookCreator) ","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { onDelete, onIncrease, onDecrease, fetchData } from '../../redux/actions'\r\nimport \"./shoppingCartTable.css\"\r\n\r\nclass ShoppingCartTable extends React.Component {\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData(\"/getCart\")\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.items !== this.props.items) {\r\n            this.onWriteToCart(this.props.items)\r\n        }\r\n    }\r\n\r\n    onWriteToCart = async (itemsCart) => {\r\n        const writeToCartArray = itemsCart.map(item => {\r\n            const { _id, count } = item\r\n            return {\r\n                bookId: _id,\r\n                count\r\n            }\r\n        })\r\n        return await this.props.fetchData('/write_to_cart', { writeToCartArray })\r\n    }\r\n\r\n\r\n    onCreateOrder = (itemsCart, totalPrice) => {\r\n        const books = itemsCart.map(item => {\r\n            return {\r\n                bookId: item._id,\r\n                count: item.count,\r\n                total: item.total\r\n            }\r\n        })\r\n        return this.props.fetchData('/create_order', { books, totalPrice })\r\n    }\r\n\r\n    render() {\r\n    \r\n        const { items, total, onIncrease, onDecrease, onDelete } = this.props\r\n        \r\n        return (\r\n            <div className=\"shopping-cart-table\">\r\n                <h3>Your Cart</h3>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Item</th>\r\n                            <th>Count</th>\r\n                            <th>Price</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            items.map((item, idx) => {\r\n\r\n                                const { _id, title, count, total } = item\r\n                                return (\r\n                                    <tr key={_id}>\r\n                                        <td>{idx + 1}</td>\r\n                                        <td>{title}</td>\r\n                                        <td>{count}</td>\r\n                                        <td>{total}</td>\r\n                                        <td>\r\n                                            <button\r\n                                                onClick={() => onIncrease(_id)}\r\n                                                className=\"btn btn-success\"\r\n                                            >\r\n                                                <i className=\"fa fa-plus-circle\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => onDecrease(_id)}\r\n                                                className=\"btn btn-warning btn-sm\"\r\n                                            >\r\n                                                <i className=\"fa fa-minus-circle\" />\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={() => onDelete(_id)}\r\n                                                className=\"btn btn-danger btn-sm\"\r\n                                            >\r\n                                                <i className=\"fa fa-trash-o\" />\r\n                                            </button>\r\n\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                            )\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"total\">\r\n                    Total: ${total}\r\n                </div>\r\n\r\n                <button\r\n                    disabled={!items.length}\r\n                    onClick={() => {\r\n                        this.onCreateOrder(items, total)\r\n                    }}\r\n                    className=\"btn btn-order btn-sm waves-effect waves-light\"\r\n                >\r\n                    <i className=\"fa fa-gift\" /> make the order\r\n            </button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onIncrease: (id) => dispatch(onIncrease(id)),\r\n        onDecrease: (id) => dispatch(onDecrease(id)),\r\n        onDelete: (id) => dispatch(onDelete(id)),\r\n        fetchData: (url, body, method, headers) =>\r\n            dispatch(fetchData(url, body, method, headers))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable)\r\n","import React from 'react'\r\nimport ShoppingCartTable from '../components/shoppingCartTable/shoppingCartTable'\r\n\r\nconst CartPage = () => {\r\n    return(\r\n        <div>\r\n            <ShoppingCartTable/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartPage","import React, { useEffect } from 'react'\r\nimport bookShop_icon from '../img/book-shop.png'\r\nimport { connect } from 'react-redux'\r\nimport { fetchData } from '../redux/actions'\r\nimport './titlePage.css'\r\n\r\nconst TitlePage = (props) => {\r\n    const { fetchData } = props\r\n    useEffect(() => {\r\n        fetchData('/books')\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <img \r\n                src={bookShop_icon} \r\n                alt=\"bookShop_icon\"\r\n                className=\"icon-book-shop\"\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url, method, body, headers) =>\r\n            dispatch(fetchData(url, method, body, headers)),        \r\n    }\r\n}\r\n\r\nexport default connect( null, mapDispatchToProps)(TitlePage)\r\n","import React, { useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport border_icon from '../img/border.png'\r\nimport {updEmail, updPassword, fetchData} from '../redux/actions'\r\nimport Input from \"../components/input/input\"\r\nimport {toastMessage} from '../service/toastMessage'\r\nimport \"./authPage.css\"\r\n\r\n\r\nconst AuthPage = (props) => { \r\n    const {email, \r\n        password, \r\n        updEmail, \r\n        updPassword, \r\n        fetchData, \r\n        isLoading, \r\n        isError, \r\n        responseMessage } = props\r\n    \r\n    useEffect(() => {\r\n        toastMessage(isError)    \r\n    },[isError])\r\n\r\n    useEffect(()=>{\r\n        toastMessage(responseMessage)\r\n    }, [responseMessage])\r\n\r\n    useEffect(()=>{\r\n        window.M.updateTextFields()\r\n    },[])\r\n    \r\n    const onLogin = async(email, password)  => {\r\n        fetchData('/login', {email, password})\r\n    }\r\n\r\n    const onRegister = async(email, password) => {\r\n        fetchData('/register', {email, password})\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col s6 offset-s3\">\r\n                <h1>Sign in or register</h1>\r\n                <div className=\"card blue-grey darken-1 card-register\">\r\n                    <div className=\"card-content white-text\">\r\n                    <span className=\"card-title\">Authorization</span>\r\n                        <div>\r\n                            <Input \r\n                                fieldValue=\"email\" \r\n                                type=\"text\" \r\n                                value={email} \r\n                                onChange={updEmail}\r\n                                labelCaption=\"Email\"/>         \r\n                            <Input \r\n                                fieldValue=\"password\" \r\n                                type=\"password\" \r\n                                value={password} \r\n                                onChange={updPassword}\r\n                                labelCaption=\"Password\"/>   \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button \r\n                            className=\"btn yellow darken-4 btn-login\" \r\n                            disabled={isLoading}\r\n                            onClick={() => {\r\n                                onLogin(email, password)\r\n                            }}\r\n                        >\r\n                            Sign in\r\n                        </button>\r\n                        <button \r\n                            className=\"btn light-blue darken-4\"\r\n                            onClick={() => {\r\n                                onRegister(email, password)\r\n                            }}\r\n                            disabled={isLoading}\r\n                        >\r\n                            Register\r\n                        </button>    \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        <img \r\n            src={border_icon} \r\n            alt=\"border_icon\"\r\n            className=\"icon-fence\"\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {  \r\n    const {email, password, responseMessage,token} = state.authData    \r\n    const {isLoading, isError } = state.download\r\n    return {\r\n        email,\r\n        password,\r\n        isLoading,\r\n        isError,\r\n        responseMessage, \r\n        token\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updEmail: (e) => dispatch(updEmail(e.target.value)),\r\n        updPassword: (e) => dispatch(updPassword(e.target.value)),\r\n        fetchData: (url, method, body, headers) => dispatch(fetchData(url, method, body, headers))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthPage) ","import React from 'react'\r\nimport './bookItem.css'\r\n\r\nconst BookItem = ({ book, onAddedToCart }) => {\r\n    const { title, author, price, coverImage } = book\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img className=\"book-image\" src={coverImage} alt=\"cover\" />\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span href=\"#\" className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button\r\n                    onClick={onAddedToCart}\r\n                    className=\"btn-bookList waves-effect waves-light  light-blue darken-3\"\r\n                >\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookItem","import React, { Component } from 'react'\r\nimport BookItem from '../bookList/bookItem/bookItem'\r\nimport { connect } from 'react-redux'\r\nimport { fetchData, addedToCart } from '../../redux/actions'\r\nimport './bookList.css'\r\n\r\nclass  BookList extends Component {\r\n   \r\n    componentDidMount() {\r\n        this.props.fetchData('/books')\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.items !== this.props.items) {\r\n            this.onWriteToCart(this.props.items)\r\n        }\r\n    }\r\n\r\n    onWriteToCart = async (itemsCart) => {\r\n        const writeToCartArray = itemsCart.map( item => {\r\n            const {_id, count} = item\r\n            return {\r\n                bookId: _id,\r\n                count\r\n            }\r\n        })\r\n        return await this.props.fetchData('/write_to_cart', {writeToCartArray})\r\n    }\r\n\r\n    bookList = this.props.books.map((item) => {\r\n        return (\r\n            <li key={item._id}>\r\n                <BookItem \r\n                    book={item} \r\n                    onAddedToCart={ () => {\r\n                        this.props.addedToCart(item._id)\r\n                    }} \r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    render() {\r\n\r\n    return (\r\n        <div className=\"bookList\">\r\n            {\r\n                this.props.books ? this.bookList : null\r\n            }\r\n        </div>\r\n    )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { books } = state.booksData\r\n    const { isLoading, isError } = state.download\r\n    const { cartItems } = state.shoppingCart\r\n\r\n    return {\r\n        books,\r\n        isLoading,\r\n        isError,\r\n        items: cartItems\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url, method, body, headers) =>\r\n            dispatch(fetchData(url, method, body, headers)),\r\n        addedToCart: (id) => dispatch(addedToCart(id))\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookList)\r\n\r\n","import React from 'react'\r\nimport BookList from '../components/bookList/bookList'\r\n\r\nconst BooksPage = () => {\r\n    return (\r\n        <div>\r\n            <BookList/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default BooksPage ","import React from 'react'\r\nimport './orderItem.css'\r\n\r\nconst OrderItem = ({ order, onDeleteOrderItem }) => {\r\n\r\n  const date = new Date(order.date).toLocaleDateString()\r\n  const time = new Date(order.date).toLocaleTimeString()\r\n  \r\n\r\n  const bookList = order.books.map((item, index) => {\r\n    console.log(order._id)\r\n    \r\n    return (\r\n      <div key={item._id}>\r\n        <p>Book: {item.bookId.title}</p>\r\n        <p>Author: {item.bookId.author}</p>\r\n        <p>Count: {item.count}</p>\r\n        <p>Price: {item.total}</p>\r\n        <hr></hr>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"row card-order\">\r\n      <div className=\"col s12 m6\">\r\n        <div className=\"card blue-grey darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Order's Date: {date}</span>\r\n            <span className=\"card-title\">Time: {time}</span>\r\n            <hr/>\r\n            {bookList}\r\n            <div className=\"total-price\">\r\n              <h6><i>Total price: ${order.totalPrice}</i></h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              onClick={() => onDeleteOrderItem(order._id)}\r\n              className=\"btn btn-danger btn-sm\"\r\n            >\r\n              <i className=\"fa fa-trash-o\" />\r\n              Delete \r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderItem","import React, { useEffect } from 'react'\r\nimport OrderItem from '../orderList/orderItem/orderItem'\r\nimport { connect } from 'react-redux'\r\nimport { fetchData } from '../../redux/actions'\r\nimport './orderList.css'\r\n\r\nconst OrderList = (props) => {\r\n    \r\n    \r\n    const {\r\n        fetchData,\r\n        orders\r\n    } = props\r\n\r\n    useEffect(() => {\r\n        fetchData('/orders')\r\n    }, [])\r\n\r\n    const onDeleteOrderItem = (orderItemId) => {\r\n        fetchData('/deleteOrderItem', {orderItemId}, \"DELETE\")\r\n    }\r\n\r\n    const orderList = orders.reverse().map((item) => {\r\n        return (\r\n            <li key={item._id}>\r\n                <OrderItem \r\n                    order={item}\r\n                    onDeleteOrderItem={onDeleteOrderItem} \r\n                />\r\n            </li>\r\n        )\r\n    })\r\n\r\n    const emptyList = \r\n    <div>\r\n        <h1>You have no orders yet!</h1>\r\n    </div> \r\n\r\n    return (\r\n        <div className=\"orderList\">\r\n            {\r\n                orders.length ? orderList : emptyList\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { orders } = state.ordersData\r\n    const { isLoading, isError } = state.download\r\n\r\n    return {\r\n        orders,\r\n        isLoading,\r\n        isError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchData: (url, method, body, headers) =>\r\n            dispatch(fetchData(url, method, body, headers)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList)","import React from 'react'\r\nimport OrderList from '../components/orderList/orderList'\r\n\r\nconst OrdersPage = () => {\r\n    return (\r\n        <div>\r\n            <OrderList/>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default OrdersPage ","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport './shopHeader.css'\r\n\r\nconst ShopHeader = ({ books, total, numItems }) => {\r\n    const [cartList, setCartList] = useState(false)\r\n\r\n    const cartListItem = <div className=\"shopping-cart\">\r\n        <i className=\"cart-icon navbar-fa-icons fa fa-shopping-cart\" />\r\n        <span>{books}&nbsp;\r\n        {books === 1 || books === 0 ? \"book\" : \"books\"}&nbsp;\r\n        - {numItems}&nbsp;\r\n        {numItems === 1 || numItems === 0 ? \"item\" : \"items\"}\r\n        </span>\r\n        <span> (${total}) </span>\r\n    </div>\r\n\r\n    const cartItem = <div>\r\n        <i className=\"cart-icon navbar-fa-icons fa fa-shopping-cart\" />\r\n        Cart\r\n    </div>\r\n\r\n    return (\r\n        <header className=\"shop-header\">\r\n            <Link to=\"/cart\" onClick={() => setCartList(true)}>\r\n                {cartList ? cartListItem : cartItem}\r\n            </Link>\r\n\r\n        </header>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { cartItems, orderTotal, numItems } = state.shoppingCart\r\n    return {\r\n        books: cartItems.length,\r\n        total: orderTotal,\r\n        numItems: numItems\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ShopHeader)","import React, { useState } from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport book_icon from '../../img/book.png' \r\nimport { logout, cartReset, fetchData} from '../../redux/actions'\r\nimport './navbar.css'\r\nimport ShopHeader from '../shopHeader/shopHeader'\r\n\r\nconst Navbar = ({logout, cartReset, items}) => {\r\n  const history = useHistory()\r\n  const onLogout = async (e) => {\r\n    e.preventDefault()\r\n    cartReset()\r\n    logout()\r\n    history.push('/auth')\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper  blue-grey darken-3\">\r\n        <span href=\"#\" className=\"brand-logo\">Book Store</span>\r\n        <img src={book_icon} alt=\"book_icon\" />\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li><ShopHeader /></li>\r\n          <li><NavLink to=\"/books\"> <i className=\"navbar-fa-icons fa fa-book\"/> Books</NavLink></li>\r\n          <li><NavLink to=\"/create_book\"><i className=\"navbar-fa-icons fa fa-pencil-square-o\"/> Create book</NavLink></li>\r\n          <li><NavLink to=\"/orders\"><i className=\"navbar-fa-icons fa fa-building\"/> Orders</NavLink></li>\r\n          <li><a to=\"/logout\" onClick={onLogout}> <i className=\"navbar-fa-icons fa fa-sign-out\"/> Logout</a></li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal } }) => {\r\n  return {\r\n      items: cartItems,\r\n      total: orderTotal\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { logout, cartReset, fetchData })(Navbar)","import React, { useEffect } from 'react';\nimport { Routes } from './route/route'\nimport { connect } from 'react-redux'\nimport { setToken } from './redux/actions'\nimport Navbar from './components/navbar/navbar'\nimport 'materialize-css'\n\n\n\nfunction App({ setToken, token, fetchData }) {\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem(\"user_data\"))\n    if (data && data.token) {\n      setToken(data.token)\n    }\n  }, [])\n  const routes = Routes(!!token)\n  return (\n    <div>\n      {\n        !!token ? <Navbar /> : null\n      }\n      <div className=\"container\">\n        {routes}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  const { token } = state.authData\n  return {\n    token\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setToken: (token) => dispatch(setToken(token)) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport CreateBookPage from '../page/createBookPage'\r\nimport CartPage from '../page/cartPage'\r\nimport TitlePage from '../page/titlePage'\r\nimport AuthPage from '../page/authPage'\r\nimport BooksPage from '../page/booksPage'\r\nimport OrdersPage from '../page/ordersPage'\r\nconst Routes = (isAuthenticated) => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path=\"/title\" exact>\r\n                    <TitlePage />\r\n                </Route>\r\n                <Route path=\"/cart\" exact>\r\n                    <CartPage />\r\n                </Route>\r\n                <Route path=\"/create_book\" exact>\r\n                    <CreateBookPage/>\r\n                </Route>\r\n                <Route path=\"/books\" exact>\r\n                    <BooksPage/>\r\n                </Route>\r\n                <Route path=\"/orders\" exact>\r\n                    <OrdersPage/>\r\n                </Route>\r\n                <Redirect to=\"/title\"/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n                <Route path=\"/title\" exact>\r\n                    <TitlePage />\r\n                </Route>\r\n                <Route path=\"/auth\" exact>\r\n                    <AuthPage />\r\n                </Route>\r\n                <Redirect to=\"/auth\"/>\r\n            </Switch>\r\n    )\r\n\r\n}\r\nexport {Routes} ","import{ EMAIL_UPDATE,\r\n        PASSWORD_UPDATE,\r\n        FETCH_LOGIN_DATA,\r\n        FETCH_REGISTER_DATA,\r\n        SET_TOKEN, \r\n        LOGOUT} from '../action-types'\r\n\r\nconst updateAuthData = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            email: \"\",\r\n            password: \"\",\r\n            token: null,\r\n            userId: null,\r\n            responseMessage: null     \r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case EMAIL_UPDATE: {\r\n            const {password} = state.authData\r\n            return {\r\n                ...state.authData,\r\n                email: action.payload,\r\n                password\r\n            }\r\n        }\r\n        case PASSWORD_UPDATE: {\r\n            const {email} = state.authData\r\n            return {\r\n                ...state.authData,\r\n                email,\r\n                password: action.payload \r\n            }\r\n        }\r\n       \r\n        case FETCH_LOGIN_DATA: {\r\n            const {message, token, userId} = action.payload\r\n            return {\r\n                ...state.authData,\r\n                token,\r\n                userId, \r\n                responseMessage: message\r\n            }\r\n        }\r\n        case FETCH_REGISTER_DATA: {\r\n            const {message} = action.payload\r\n            return {\r\n                ...state.authData,\r\n                responseMessage: message,\r\n                email: \"\",\r\n                password: \"\"\r\n            }\r\n        }\r\n        case SET_TOKEN: {\r\n            const token = action.payload\r\n            return {\r\n                ...state.authData,\r\n                token\r\n            }\r\n        }\r\n        case LOGOUT: {\r\n            return {\r\n                ...state.authData,\r\n                token: null,\r\n                email: \"\",\r\n                password:\"\"\r\n            }\r\n        }\r\n          \r\n        default:\r\n            return state.authData\r\n    }\r\n}\r\n\r\nexport default updateAuthData","import{ FETCH_FAILURE,\r\n        FETCH_SUCCESS,\r\n        FETCH_REQUEST} from '../action-types'\r\n\r\nconst updateDownload = (state, action) => {\r\nif(state === undefined) {\r\n    return {\r\n        isLoading: false,\r\n        isError: null     \r\n    }\r\n}\r\nswitch (action.type) {\r\n    case FETCH_REQUEST: {\r\n        return {\r\n            isLoading: true,\r\n            isError: null\r\n        }\r\n    }\r\n    case FETCH_SUCCESS: {        \r\n        return {\r\n            isLoading: false, \r\n            isError: null \r\n        }\r\n    }\r\n    case FETCH_FAILURE: {\r\n        return {\r\n            isLoading: false,\r\n            isError: action.payload\r\n        }\r\n    }   \r\n    default:\r\n        return state.download\r\n}\r\n}\r\n\r\nexport default updateDownload","import {\r\n    FETCH_BOOK_CREATED,\r\n    TITLE_UPDATE,\r\n    AUTHOR_UPDATE,\r\n    PRICE_UPDATE,\r\n    COVER_IMAGE_UPDATE,\r\n    FETCH_BOOKS\r\n} from '../action-types'\r\n\r\nconst updateBooks = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            books: [],\r\n            title: \"\",\r\n            author: \"\",\r\n            price: 0,\r\n            coverImage:\"\",\r\n            responseMessage: null            \r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        case FETCH_BOOK_CREATED: {\r\n            const { message } = action.payload \r\n            return {\r\n                ...state.booksData,\r\n                title: \"\",\r\n                author: \"\",\r\n                price: 0,\r\n                coverImage: \"\",\r\n                responseMessage: message\r\n            }\r\n        }\r\n\r\n        case FETCH_BOOKS: {\r\n            const { books } = action.payload \r\n            return {\r\n                ...state.booksData,\r\n                books\r\n            }\r\n        }\r\n\r\n        case TITLE_UPDATE: {            \r\n            return {\r\n                ...state.booksData,\r\n                title:action.payload\r\n            }\r\n        }\r\n        case AUTHOR_UPDATE: {\r\n            return {\r\n                ...state.booksData,\r\n                author: action.payload\r\n            }\r\n        }case PRICE_UPDATE: {\r\n            return {\r\n                ...state.booksData,\r\n                price: action.payload\r\n            }\r\n        }\r\n        case COVER_IMAGE_UPDATE: {\r\n            return {\r\n                ...state.booksData,\r\n                coverImage: action.payload\r\n            }\r\n        }           \r\n    \r\n        default:\r\n            return state.booksData\r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default updateBooks","import {\r\n    BOOK_DELETED_FROM_CART,\r\n    BOOK_ADDED_TO_CART,\r\n    BOOK_DECREASED_FROM_CART, \r\n    BOOK_ADDED_TO_CART_FROM_SERVER,\r\n    CART_RESET} from '../action-types'\r\n\r\nconst findBookInBooks = ({booksData: {books}}, _id) => {\r\n    return books.find((item) => item._id === _id)\r\n}\r\n\r\nconst updBookInCart = (state, book, addBookCount) => {\r\n    const {_id, title, price} = book\r\n    \r\n    const {cartItems, orderTotal, numItems} = state.shoppingCart\r\n    \r\n    const candidateIndex = cartItems.findIndex((item) => item._id === _id)\r\n    let updItemInCart\r\n    if(candidateIndex !== -1) {\r\n        updItemInCart = cartItems[candidateIndex]\r\n        updItemInCart = {\r\n            _id: updItemInCart._id,\r\n            title: updItemInCart.title,\r\n            count: updItemInCart.count + addBookCount,\r\n            total: updItemInCart.total + addBookCount*price            \r\n        }\r\n\r\n        if(updItemInCart.count === 0) {\r\n            return deleteBookFromCart(state, updItemInCart._id)\r\n        }\r\n\r\n        return {\r\n            orderTotal: orderTotal + addBookCount*price,\r\n            cartItems: [...cartItems.slice(0, candidateIndex),\r\n                         updItemInCart, ...cartItems.slice(candidateIndex + 1)],\r\n            numItems: numItems +  addBookCount\r\n        }\r\n    } else {\r\n        updItemInCart = {\r\n            _id: _id,\r\n            title: title,\r\n            count: addBookCount,\r\n            total: addBookCount * price\r\n        }\r\n        return {\r\n            orderTotal: orderTotal + addBookCount*price,\r\n            cartItems: [...cartItems, updItemInCart],\r\n            numItems: numItems + addBookCount\r\n        }\r\n    } \r\n        \r\n}\r\nconst deleteBookFromCart = (state, _id) => {\r\n    const {cartItems, orderTotal, numItems} = state.shoppingCart\r\n    const delBook = cartItems.find((item) => item._id === _id)\r\n    if(delBook){\r\n        const updCartItems =  cartItems.filter((item) => item._id !== _id)\r\n        return {\r\n            orderTotal: orderTotal - delBook.total,\r\n            cartItems: updCartItems,\r\n            numItems: numItems - delBook.count\r\n        }\r\n    }\r\n    return state.shoppingCart\r\n} \r\n\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            cartItems: [],\r\n            orderTotal: 0,\r\n            numItems: 0      \r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case BOOK_ADDED_TO_CART: {\r\n            \r\n            const book = findBookInBooks(state, action.payload)\r\n            return updBookInCart(state, book, 1)          \r\n        }\r\n        case BOOK_DECREASED_FROM_CART: {\r\n            const book = findBookInBooks(state, action.payload)\r\n            return updBookInCart(state, book, -1)\r\n        }\r\n        case BOOK_DELETED_FROM_CART: {\r\n            return deleteBookFromCart(state, action.payload)\r\n\r\n        }\r\n        case BOOK_ADDED_TO_CART_FROM_SERVER: {\r\n            const {_id, count} = action.payload\r\n            const book = findBookInBooks(state, _id)\r\n            \r\n            return updBookInCart(state, book, count)\r\n        }\r\n        case CART_RESET: {\r\n            \r\n            return {\r\n                cartItems: [],\r\n                orderTotal: 0,\r\n                numItems: 0      \r\n            }\r\n        }        \r\n        \r\n        default:\r\n            return state.shoppingCart\r\n    }\r\n}\r\nexport default updateShoppingCart","import {\r\n    FETCH_ORDERS\r\n} from '../action-types'\r\n\r\nconst updateOrders = (state, action) => {\r\n    if(state === undefined) {\r\n        return {\r\n            orders: [],\r\n            responseMessage: null            \r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n\r\n        \r\n        case FETCH_ORDERS: {\r\n            const { orders } = action.payload \r\n            return {\r\n                ...state.ordersData,\r\n                orders\r\n            }\r\n        }\r\n\r\n                   \r\n    \r\n        default:\r\n            return state.ordersData\r\n            \r\n    }\r\n\r\n}\r\n\r\n\r\nexport default updateOrders","import updateAuthData from './updateAuthData'\r\nimport updateDownload from './updateDownload'\r\nimport updateBooks from './updateBooks'\r\nimport updateShoppingCart from './updateShoppingCart'\r\nimport updateOrders from './updateOrders'\r\n\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    return {\r\n        authData: updateAuthData(state, action),\r\n        download: updateDownload(state, action),\r\n        booksData: updateBooks(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n        ordersData: updateOrders(state, action)\r\n    }   \r\n}\r\n\r\nexport default reducer","import {createStore, applyMiddleware} from 'redux'\r\nimport reducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n \r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './redux/store'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}